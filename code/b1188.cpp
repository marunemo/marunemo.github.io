#include <iostream>

using namespace std;

int gcd(int a, int b) {
    if(b == 0) return a;
    return gcd(b, a % b);
}

int main() {
    int n, m;
    cin >> n >> m;

    // n < m을 만족하는 서로소인 n, m에 대해 n/m만큼 쪼개기 위해서는 반드시 최소 m-1번의 칼질을 해야한다.
    // 이는 소세지 여러 개를 하나의 소세지라고 생각하면 반드시 m-1번의 칼질이 필요하다는 것을 알 수 있다.
    // n개의 소세지를 자르는 중 소세지 끝이 이미 나뉘어 칼질을 하지 않기 위해서는 n과 m이 서로소의 배수여야 한다.
    // 다시 말해, 이미 서로소로 하나의 소세지처럼 잘린 만큼이 n과 m의 공약수만큼 반복되고 있다는 것이다.
    // 결론적으로 n과 m이 서로소가 아닌 경우, 쪼개는 비율인 n/m은 약분에 따라 서로소일 떄의 칼질 횟수와 같으며
    // 서로소 대비 n과 m의 최대공약수만큼 소세지의 개수가 배가 되므로, 위의 횟수에 최대공약수 배만큼의 칼질을 더해줘야 한다.
    int div = gcd(n % m, m);
    m /= div;
    cout << div * (m - 1) << endl;
    return 0;
}